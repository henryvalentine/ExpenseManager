//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_AccountsHead_ExpenseCategory", "ExpenseCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.ExpenseCategory), "AccountsHead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.AccountsHead), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseItem_AccountsHead", "AccountsHead", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.AccountsHead), "ExpenseItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseItem), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_AssetType_AssetCategory", "AssetCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.AssetCategory), "AssetType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.AssetType), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_FixedAsset_AssetCategory", "AssetCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.AssetCategory), "FixedAsset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.FixedAsset), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_LiquidAsset_AssetCategory", "AssetCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.AssetCategory), "LiquidAsset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.LiquidAsset), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_FixedAsset_AssetType", "AssetType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.AssetType), "FixedAsset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.FixedAsset), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_LiquidAsset_AssetType", "AssetType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.AssetType), "LiquidAsset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.LiquidAsset), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_Cheque_Bank", "Bank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.Bank), "Cheque", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.Cheque), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_Beneficiary_BeneficiaryType", "BeneficiaryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.BeneficiaryType), "Beneficiary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.Beneficiary), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_Beneficiary_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.Department), "Beneficiary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.Beneficiary), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_Beneficiary_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.Unit), "Beneficiary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.Beneficiary), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseTransaction_Beneficiary", "Beneficiary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.Beneficiary), "ExpenseTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseTransaction), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPayment_Beneficiary", "Beneficiary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.Beneficiary), "ExpenseTransactionPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseTransactionPayment), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_Beneficiary", "Beneficiary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.Beneficiary), "ExpenseTransactionPaymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseTransactionPaymentHistory), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_StaffUser_Beneficiary", "Beneficiary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.Beneficiary), "StaffUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.StaffUser), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseTransaction_BeneficiaryType", "BeneficiaryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.BeneficiaryType), "ExpenseTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseTransaction), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_Cheque_ExpenseTransactionPaymentHistory", "ExpenseTransactionPaymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.ExpenseTransactionPaymentHistory), "Cheque", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.Cheque), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseTransaction_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.Department), "ExpenseTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseTransaction), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPayment_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.Department), "ExpenseTransactionPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseTransactionPayment), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_Unit_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.Department), "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.Unit), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseItem_ExpenseCategory", "ExpenseCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.ExpenseCategory), "ExpenseItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseItem), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseCategory", "ExpenseCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.ExpenseCategory), "TransactionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.TransactionItem), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseItem", "ExpenseItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.ExpenseItem), "TransactionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.TransactionItem), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPayment_ExpenseTransaction", "ExpenseTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.ExpenseTransaction), "ExpenseTransactionPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseTransactionPayment), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_ExpenseTransaction", "ExpenseTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.ExpenseTransaction), "ExpenseTransactionPaymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseTransactionPaymentHistory), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseTransaction", "ExpenseTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.ExpenseTransaction), "TransactionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.TransactionItem), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_ExpenseTransactionPayment", "ExpenseTransactionPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.ExpenseTransactionPayment), "ExpenseTransactionPaymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseTransactionPaymentHistory), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_PaymentMode", "PaymentMode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.PaymentMode), "ExpenseTransactionPaymentHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.ExpenseTransactionPaymentHistory), true)]
[assembly: EdmRelationshipAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseType", "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ExpenseManager.EF.ExpenseType), "TransactionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ExpenseManager.EF.TransactionItem), true)]

#endregion

namespace ExpenseManager.EF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ExpenseManagerDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ExpenseManagerDBEntities object using the connection string found in the 'ExpenseManagerDBEntities' section of the application configuration file.
        /// </summary>
        public ExpenseManagerDBEntities() : base("name=ExpenseManagerDBEntities", "ExpenseManagerDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExpenseManagerDBEntities object.
        /// </summary>
        public ExpenseManagerDBEntities(string connectionString) : base(connectionString, "ExpenseManagerDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExpenseManagerDBEntities object.
        /// </summary>
        public ExpenseManagerDBEntities(EntityConnection connection) : base(connection, "ExpenseManagerDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountsHead> AccountsHeads
        {
            get
            {
                if ((_AccountsHeads == null))
                {
                    _AccountsHeads = base.CreateObjectSet<AccountsHead>("AccountsHeads");
                }
                return _AccountsHeads;
            }
        }
        private ObjectSet<AccountsHead> _AccountsHeads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetCategory> AssetCategories
        {
            get
            {
                if ((_AssetCategories == null))
                {
                    _AssetCategories = base.CreateObjectSet<AssetCategory>("AssetCategories");
                }
                return _AssetCategories;
            }
        }
        private ObjectSet<AssetCategory> _AssetCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetType> AssetTypes
        {
            get
            {
                if ((_AssetTypes == null))
                {
                    _AssetTypes = base.CreateObjectSet<AssetType>("AssetTypes");
                }
                return _AssetTypes;
            }
        }
        private ObjectSet<AssetType> _AssetTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bank> Banks
        {
            get
            {
                if ((_Banks == null))
                {
                    _Banks = base.CreateObjectSet<Bank>("Banks");
                }
                return _Banks;
            }
        }
        private ObjectSet<Bank> _Banks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Beneficiary> Beneficiaries
        {
            get
            {
                if ((_Beneficiaries == null))
                {
                    _Beneficiaries = base.CreateObjectSet<Beneficiary>("Beneficiaries");
                }
                return _Beneficiaries;
            }
        }
        private ObjectSet<Beneficiary> _Beneficiaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BeneficiaryType> BeneficiaryTypes
        {
            get
            {
                if ((_BeneficiaryTypes == null))
                {
                    _BeneficiaryTypes = base.CreateObjectSet<BeneficiaryType>("BeneficiaryTypes");
                }
                return _BeneficiaryTypes;
            }
        }
        private ObjectSet<BeneficiaryType> _BeneficiaryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cheque> Cheques
        {
            get
            {
                if ((_Cheques == null))
                {
                    _Cheques = base.CreateObjectSet<Cheque>("Cheques");
                }
                return _Cheques;
            }
        }
        private ObjectSet<Cheque> _Cheques;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseCategory> ExpenseCategories
        {
            get
            {
                if ((_ExpenseCategories == null))
                {
                    _ExpenseCategories = base.CreateObjectSet<ExpenseCategory>("ExpenseCategories");
                }
                return _ExpenseCategories;
            }
        }
        private ObjectSet<ExpenseCategory> _ExpenseCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseItem> ExpenseItems
        {
            get
            {
                if ((_ExpenseItems == null))
                {
                    _ExpenseItems = base.CreateObjectSet<ExpenseItem>("ExpenseItems");
                }
                return _ExpenseItems;
            }
        }
        private ObjectSet<ExpenseItem> _ExpenseItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseTransaction> ExpenseTransactions
        {
            get
            {
                if ((_ExpenseTransactions == null))
                {
                    _ExpenseTransactions = base.CreateObjectSet<ExpenseTransaction>("ExpenseTransactions");
                }
                return _ExpenseTransactions;
            }
        }
        private ObjectSet<ExpenseTransaction> _ExpenseTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseTransactionPayment> ExpenseTransactionPayments
        {
            get
            {
                if ((_ExpenseTransactionPayments == null))
                {
                    _ExpenseTransactionPayments = base.CreateObjectSet<ExpenseTransactionPayment>("ExpenseTransactionPayments");
                }
                return _ExpenseTransactionPayments;
            }
        }
        private ObjectSet<ExpenseTransactionPayment> _ExpenseTransactionPayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseTransactionPaymentHistory> ExpenseTransactionPaymentHistories
        {
            get
            {
                if ((_ExpenseTransactionPaymentHistories == null))
                {
                    _ExpenseTransactionPaymentHistories = base.CreateObjectSet<ExpenseTransactionPaymentHistory>("ExpenseTransactionPaymentHistories");
                }
                return _ExpenseTransactionPaymentHistories;
            }
        }
        private ObjectSet<ExpenseTransactionPaymentHistory> _ExpenseTransactionPaymentHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseType> ExpenseTypes
        {
            get
            {
                if ((_ExpenseTypes == null))
                {
                    _ExpenseTypes = base.CreateObjectSet<ExpenseType>("ExpenseTypes");
                }
                return _ExpenseTypes;
            }
        }
        private ObjectSet<ExpenseType> _ExpenseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FixedAsset> FixedAssets
        {
            get
            {
                if ((_FixedAssets == null))
                {
                    _FixedAssets = base.CreateObjectSet<FixedAsset>("FixedAssets");
                }
                return _FixedAssets;
            }
        }
        private ObjectSet<FixedAsset> _FixedAssets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LiquidAsset> LiquidAssets
        {
            get
            {
                if ((_LiquidAssets == null))
                {
                    _LiquidAssets = base.CreateObjectSet<LiquidAsset>("LiquidAssets");
                }
                return _LiquidAssets;
            }
        }
        private ObjectSet<LiquidAsset> _LiquidAssets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentMode> PaymentModes
        {
            get
            {
                if ((_PaymentModes == null))
                {
                    _PaymentModes = base.CreateObjectSet<PaymentMode>("PaymentModes");
                }
                return _PaymentModes;
            }
        }
        private ObjectSet<PaymentMode> _PaymentModes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentVoucherNumber> PaymentVoucherNumbers
        {
            get
            {
                if ((_PaymentVoucherNumbers == null))
                {
                    _PaymentVoucherNumbers = base.CreateObjectSet<PaymentVoucherNumber>("PaymentVoucherNumbers");
                }
                return _PaymentVoucherNumbers;
            }
        }
        private ObjectSet<PaymentVoucherNumber> _PaymentVoucherNumbers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StaffUser> StaffUsers
        {
            get
            {
                if ((_StaffUsers == null))
                {
                    _StaffUsers = base.CreateObjectSet<StaffUser>("StaffUsers");
                }
                return _StaffUsers;
            }
        }
        private ObjectSet<StaffUser> _StaffUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionItem> TransactionItems
        {
            get
            {
                if ((_TransactionItems == null))
                {
                    _TransactionItems = base.CreateObjectSet<TransactionItem>("TransactionItems");
                }
                return _TransactionItems;
            }
        }
        private ObjectSet<TransactionItem> _TransactionItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Unit> Units
        {
            get
            {
                if ((_Units == null))
                {
                    _Units = base.CreateObjectSet<Unit>("Units");
                }
                return _Units;
            }
        }
        private ObjectSet<Unit> _Units;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountsHeads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountsHeads(AccountsHead accountsHead)
        {
            base.AddObject("AccountsHeads", accountsHead);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetCategories(AssetCategory assetCategory)
        {
            base.AddObject("AssetCategories", assetCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetTypes(AssetType assetType)
        {
            base.AddObject("AssetTypes", assetType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Banks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBanks(Bank bank)
        {
            base.AddObject("Banks", bank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Beneficiaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBeneficiaries(Beneficiary beneficiary)
        {
            base.AddObject("Beneficiaries", beneficiary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BeneficiaryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBeneficiaryTypes(BeneficiaryType beneficiaryType)
        {
            base.AddObject("BeneficiaryTypes", beneficiaryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cheques EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCheques(Cheque cheque)
        {
            base.AddObject("Cheques", cheque);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseCategories(ExpenseCategory expenseCategory)
        {
            base.AddObject("ExpenseCategories", expenseCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseItems(ExpenseItem expenseItem)
        {
            base.AddObject("ExpenseItems", expenseItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseTransactions(ExpenseTransaction expenseTransaction)
        {
            base.AddObject("ExpenseTransactions", expenseTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseTransactionPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseTransactionPayments(ExpenseTransactionPayment expenseTransactionPayment)
        {
            base.AddObject("ExpenseTransactionPayments", expenseTransactionPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseTransactionPaymentHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseTransactionPaymentHistories(ExpenseTransactionPaymentHistory expenseTransactionPaymentHistory)
        {
            base.AddObject("ExpenseTransactionPaymentHistories", expenseTransactionPaymentHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseTypes(ExpenseType expenseType)
        {
            base.AddObject("ExpenseTypes", expenseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FixedAssets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFixedAssets(FixedAsset fixedAsset)
        {
            base.AddObject("FixedAssets", fixedAsset);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LiquidAssets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLiquidAssets(LiquidAsset liquidAsset)
        {
            base.AddObject("LiquidAssets", liquidAsset);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentModes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentModes(PaymentMode paymentMode)
        {
            base.AddObject("PaymentModes", paymentMode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentVoucherNumbers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentVoucherNumbers(PaymentVoucherNumber paymentVoucherNumber)
        {
            base.AddObject("PaymentVoucherNumbers", paymentVoucherNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StaffUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaffUsers(StaffUser staffUser)
        {
            base.AddObject("StaffUsers", staffUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionItems(TransactionItem transactionItem)
        {
            base.AddObject("TransactionItems", transactionItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Units EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnits(Unit unit)
        {
            base.AddObject("Units", unit);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="AccountsHead")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountsHead : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountsHead object.
        /// </summary>
        /// <param name="accountsHeadId">Initial value of the AccountsHeadId property.</param>
        /// <param name="expenseCategoryId">Initial value of the ExpenseCategoryId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static AccountsHead CreateAccountsHead(global::System.Int32 accountsHeadId, global::System.Int32 expenseCategoryId, global::System.String title, global::System.String description, global::System.String code, global::System.Int32 status)
        {
            AccountsHead accountsHead = new AccountsHead();
            accountsHead.AccountsHeadId = accountsHeadId;
            accountsHead.ExpenseCategoryId = expenseCategoryId;
            accountsHead.Title = title;
            accountsHead.Description = description;
            accountsHead.Code = code;
            accountsHead.Status = status;
            return accountsHead;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountsHeadId
        {
            get
            {
                return _AccountsHeadId;
            }
            set
            {
                if (_AccountsHeadId != value)
                {
                    OnAccountsHeadIdChanging(value);
                    ReportPropertyChanging("AccountsHeadId");
                    _AccountsHeadId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountsHeadId");
                    OnAccountsHeadIdChanged();
                }
            }
        }
        private global::System.Int32 _AccountsHeadId;
        partial void OnAccountsHeadIdChanging(global::System.Int32 value);
        partial void OnAccountsHeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseCategoryId
        {
            get
            {
                return _ExpenseCategoryId;
            }
            set
            {
                OnExpenseCategoryIdChanging(value);
                ReportPropertyChanging("ExpenseCategoryId");
                _ExpenseCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseCategoryId");
                OnExpenseCategoryIdChanged();
            }
        }
        private global::System.Int32 _ExpenseCategoryId;
        partial void OnExpenseCategoryIdChanging(global::System.Int32 value);
        partial void OnExpenseCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_AccountsHead_ExpenseCategory", "ExpenseCategory")]
        public ExpenseCategory ExpenseCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_AccountsHead_ExpenseCategory", "ExpenseCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_AccountsHead_ExpenseCategory", "ExpenseCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseCategory> ExpenseCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_AccountsHead_ExpenseCategory", "ExpenseCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_AccountsHead_ExpenseCategory", "ExpenseCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseItem_AccountsHead", "ExpenseItem")]
        public EntityCollection<ExpenseItem> ExpenseItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseItem>("ExpenseManagerDBModel.FK_ExpenseItem_AccountsHead", "ExpenseItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseItem>("ExpenseManagerDBModel.FK_ExpenseItem_AccountsHead", "ExpenseItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="AssetCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetCategory object.
        /// </summary>
        /// <param name="assetCategoryId">Initial value of the AssetCategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static AssetCategory CreateAssetCategory(global::System.Int32 assetCategoryId, global::System.String name, global::System.Int64 code, global::System.Int32 status)
        {
            AssetCategory assetCategory = new AssetCategory();
            assetCategory.AssetCategoryId = assetCategoryId;
            assetCategory.Name = name;
            assetCategory.Code = code;
            assetCategory.Status = status;
            return assetCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetCategoryId
        {
            get
            {
                return _AssetCategoryId;
            }
            set
            {
                if (_AssetCategoryId != value)
                {
                    OnAssetCategoryIdChanging(value);
                    ReportPropertyChanging("AssetCategoryId");
                    _AssetCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssetCategoryId");
                    OnAssetCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _AssetCategoryId;
        partial void OnAssetCategoryIdChanging(global::System.Int32 value);
        partial void OnAssetCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.Int64 _Code;
        partial void OnCodeChanging(global::System.Int64 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_AssetType_AssetCategory", "AssetType")]
        public EntityCollection<AssetType> AssetTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssetType>("ExpenseManagerDBModel.FK_AssetType_AssetCategory", "AssetType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssetType>("ExpenseManagerDBModel.FK_AssetType_AssetCategory", "AssetType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_FixedAsset_AssetCategory", "FixedAsset")]
        public EntityCollection<FixedAsset> FixedAssets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FixedAsset>("ExpenseManagerDBModel.FK_FixedAsset_AssetCategory", "FixedAsset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FixedAsset>("ExpenseManagerDBModel.FK_FixedAsset_AssetCategory", "FixedAsset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_LiquidAsset_AssetCategory", "LiquidAsset")]
        public EntityCollection<LiquidAsset> LiquidAssets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LiquidAsset>("ExpenseManagerDBModel.FK_LiquidAsset_AssetCategory", "LiquidAsset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LiquidAsset>("ExpenseManagerDBModel.FK_LiquidAsset_AssetCategory", "LiquidAsset", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="AssetType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetType object.
        /// </summary>
        /// <param name="assetTypeId">Initial value of the AssetTypeId property.</param>
        /// <param name="assetCategoryId">Initial value of the AssetCategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static AssetType CreateAssetType(global::System.Int32 assetTypeId, global::System.Int32 assetCategoryId, global::System.String name, global::System.Int64 code, global::System.Int32 status)
        {
            AssetType assetType = new AssetType();
            assetType.AssetTypeId = assetTypeId;
            assetType.AssetCategoryId = assetCategoryId;
            assetType.Name = name;
            assetType.Code = code;
            assetType.Status = status;
            return assetType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetTypeId
        {
            get
            {
                return _AssetTypeId;
            }
            set
            {
                if (_AssetTypeId != value)
                {
                    OnAssetTypeIdChanging(value);
                    ReportPropertyChanging("AssetTypeId");
                    _AssetTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssetTypeId");
                    OnAssetTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _AssetTypeId;
        partial void OnAssetTypeIdChanging(global::System.Int32 value);
        partial void OnAssetTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetCategoryId
        {
            get
            {
                return _AssetCategoryId;
            }
            set
            {
                OnAssetCategoryIdChanging(value);
                ReportPropertyChanging("AssetCategoryId");
                _AssetCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetCategoryId");
                OnAssetCategoryIdChanged();
            }
        }
        private global::System.Int32 _AssetCategoryId;
        partial void OnAssetCategoryIdChanging(global::System.Int32 value);
        partial void OnAssetCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.Int64 _Code;
        partial void OnCodeChanging(global::System.Int64 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_AssetType_AssetCategory", "AssetCategory")]
        public AssetCategory AssetCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_AssetType_AssetCategory", "AssetCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_AssetType_AssetCategory", "AssetCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssetCategory> AssetCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_AssetType_AssetCategory", "AssetCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_AssetType_AssetCategory", "AssetCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_FixedAsset_AssetType", "FixedAsset")]
        public EntityCollection<FixedAsset> FixedAssets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FixedAsset>("ExpenseManagerDBModel.FK_FixedAsset_AssetType", "FixedAsset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FixedAsset>("ExpenseManagerDBModel.FK_FixedAsset_AssetType", "FixedAsset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_LiquidAsset_AssetType", "LiquidAsset")]
        public EntityCollection<LiquidAsset> LiquidAssets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LiquidAsset>("ExpenseManagerDBModel.FK_LiquidAsset_AssetType", "LiquidAsset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LiquidAsset>("ExpenseManagerDBModel.FK_LiquidAsset_AssetType", "LiquidAsset", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="Bank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bank object.
        /// </summary>
        /// <param name="bankId">Initial value of the BankId property.</param>
        /// <param name="bankName">Initial value of the BankName property.</param>
        public static Bank CreateBank(global::System.Int32 bankId, global::System.String bankName)
        {
            Bank bank = new Bank();
            bank.BankId = bankId;
            bank.BankName = bankName;
            return bank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankId
        {
            get
            {
                return _BankId;
            }
            set
            {
                if (_BankId != value)
                {
                    OnBankIdChanging(value);
                    ReportPropertyChanging("BankId");
                    _BankId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BankId");
                    OnBankIdChanged();
                }
            }
        }
        private global::System.Int32 _BankId;
        partial void OnBankIdChanging(global::System.Int32 value);
        partial void OnBankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Cheque_Bank", "Cheque")]
        public EntityCollection<Cheque> Cheques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cheque>("ExpenseManagerDBModel.FK_Cheque_Bank", "Cheque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cheque>("ExpenseManagerDBModel.FK_Cheque_Bank", "Cheque", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="Beneficiary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Beneficiary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Beneficiary object.
        /// </summary>
        /// <param name="beneficiaryId">Initial value of the BeneficiaryId property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="gSMNO1">Initial value of the GSMNO1 property.</param>
        /// <param name="dateRegistered">Initial value of the DateRegistered property.</param>
        /// <param name="timeRegistered">Initial value of the TimeRegistered property.</param>
        /// <param name="sex">Initial value of the Sex property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="unitId">Initial value of the UnitId property.</param>
        /// <param name="beneficiaryTypeId">Initial value of the BeneficiaryTypeId property.</param>
        public static Beneficiary CreateBeneficiary(global::System.Int32 beneficiaryId, global::System.String fullName, global::System.String gSMNO1, global::System.String dateRegistered, global::System.String timeRegistered, global::System.Int32 sex, global::System.String email, global::System.Int32 status, global::System.String companyName, global::System.Int32 departmentId, global::System.Int32 unitId, global::System.Int32 beneficiaryTypeId)
        {
            Beneficiary beneficiary = new Beneficiary();
            beneficiary.BeneficiaryId = beneficiaryId;
            beneficiary.FullName = fullName;
            beneficiary.GSMNO1 = gSMNO1;
            beneficiary.DateRegistered = dateRegistered;
            beneficiary.TimeRegistered = timeRegistered;
            beneficiary.Sex = sex;
            beneficiary.Email = email;
            beneficiary.Status = status;
            beneficiary.CompanyName = companyName;
            beneficiary.DepartmentId = departmentId;
            beneficiary.UnitId = unitId;
            beneficiary.BeneficiaryTypeId = beneficiaryTypeId;
            return beneficiary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BeneficiaryId
        {
            get
            {
                return _BeneficiaryId;
            }
            set
            {
                if (_BeneficiaryId != value)
                {
                    OnBeneficiaryIdChanging(value);
                    ReportPropertyChanging("BeneficiaryId");
                    _BeneficiaryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BeneficiaryId");
                    OnBeneficiaryIdChanged();
                }
            }
        }
        private global::System.Int32 _BeneficiaryId;
        partial void OnBeneficiaryIdChanging(global::System.Int32 value);
        partial void OnBeneficiaryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GSMNO2
        {
            get
            {
                return _GSMNO2;
            }
            set
            {
                OnGSMNO2Changing(value);
                ReportPropertyChanging("GSMNO2");
                _GSMNO2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GSMNO2");
                OnGSMNO2Changed();
            }
        }
        private global::System.String _GSMNO2;
        partial void OnGSMNO2Changing(global::System.String value);
        partial void OnGSMNO2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GSMNO1
        {
            get
            {
                return _GSMNO1;
            }
            set
            {
                OnGSMNO1Changing(value);
                ReportPropertyChanging("GSMNO1");
                _GSMNO1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GSMNO1");
                OnGSMNO1Changed();
            }
        }
        private global::System.String _GSMNO1;
        partial void OnGSMNO1Changing(global::System.String value);
        partial void OnGSMNO1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DateRegistered
        {
            get
            {
                return _DateRegistered;
            }
            set
            {
                OnDateRegisteredChanging(value);
                ReportPropertyChanging("DateRegistered");
                _DateRegistered = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DateRegistered");
                OnDateRegisteredChanged();
            }
        }
        private global::System.String _DateRegistered;
        partial void OnDateRegisteredChanging(global::System.String value);
        partial void OnDateRegisteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TimeRegistered
        {
            get
            {
                return _TimeRegistered;
            }
            set
            {
                OnTimeRegisteredChanging(value);
                ReportPropertyChanging("TimeRegistered");
                _TimeRegistered = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TimeRegistered");
                OnTimeRegisteredChanged();
            }
        }
        private global::System.String _TimeRegistered;
        partial void OnTimeRegisteredChanging(global::System.String value);
        partial void OnTimeRegisteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.Int32 _Sex;
        partial void OnSexChanging(global::System.Int32 value);
        partial void OnSexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                OnUnitIdChanging(value);
                ReportPropertyChanging("UnitId");
                _UnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitId");
                OnUnitIdChanged();
            }
        }
        private global::System.Int32 _UnitId;
        partial void OnUnitIdChanging(global::System.Int32 value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BeneficiaryTypeId
        {
            get
            {
                return _BeneficiaryTypeId;
            }
            set
            {
                OnBeneficiaryTypeIdChanging(value);
                ReportPropertyChanging("BeneficiaryTypeId");
                _BeneficiaryTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeneficiaryTypeId");
                OnBeneficiaryTypeIdChanged();
            }
        }
        private global::System.Int32 _BeneficiaryTypeId;
        partial void OnBeneficiaryTypeIdChanging(global::System.Int32 value);
        partial void OnBeneficiaryTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Beneficiary_BeneficiaryType", "BeneficiaryType")]
        public BeneficiaryType BeneficiaryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BeneficiaryType>("ExpenseManagerDBModel.FK_Beneficiary_BeneficiaryType", "BeneficiaryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BeneficiaryType>("ExpenseManagerDBModel.FK_Beneficiary_BeneficiaryType", "BeneficiaryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BeneficiaryType> BeneficiaryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BeneficiaryType>("ExpenseManagerDBModel.FK_Beneficiary_BeneficiaryType", "BeneficiaryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BeneficiaryType>("ExpenseManagerDBModel.FK_Beneficiary_BeneficiaryType", "BeneficiaryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Beneficiary_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_Beneficiary_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_Beneficiary_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_Beneficiary_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("ExpenseManagerDBModel.FK_Beneficiary_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Beneficiary_Unit", "Unit")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("ExpenseManagerDBModel.FK_Beneficiary_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("ExpenseManagerDBModel.FK_Beneficiary_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("ExpenseManagerDBModel.FK_Beneficiary_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("ExpenseManagerDBModel.FK_Beneficiary_Unit", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransaction_Beneficiary", "ExpenseTransaction")]
        public EntityCollection<ExpenseTransaction> ExpenseTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransaction_Beneficiary", "ExpenseTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransaction_Beneficiary", "ExpenseTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPayment_Beneficiary", "ExpenseTransactionPayment")]
        public EntityCollection<ExpenseTransactionPayment> ExpenseTransactionPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseTransactionPayment>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Beneficiary", "ExpenseTransactionPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseTransactionPayment>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Beneficiary", "ExpenseTransactionPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_Beneficiary", "ExpenseTransactionPaymentHistory")]
        public EntityCollection<ExpenseTransactionPaymentHistory> ExpenseTransactionPaymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_Beneficiary", "ExpenseTransactionPaymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_Beneficiary", "ExpenseTransactionPaymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_StaffUser_Beneficiary", "StaffUser")]
        public EntityCollection<StaffUser> StaffUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StaffUser>("ExpenseManagerDBModel.FK_StaffUser_Beneficiary", "StaffUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StaffUser>("ExpenseManagerDBModel.FK_StaffUser_Beneficiary", "StaffUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="BeneficiaryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BeneficiaryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BeneficiaryType object.
        /// </summary>
        /// <param name="beneficiaryTypeId">Initial value of the BeneficiaryTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static BeneficiaryType CreateBeneficiaryType(global::System.Int32 beneficiaryTypeId, global::System.String name, global::System.Int32 status)
        {
            BeneficiaryType beneficiaryType = new BeneficiaryType();
            beneficiaryType.BeneficiaryTypeId = beneficiaryTypeId;
            beneficiaryType.Name = name;
            beneficiaryType.Status = status;
            return beneficiaryType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BeneficiaryTypeId
        {
            get
            {
                return _BeneficiaryTypeId;
            }
            set
            {
                if (_BeneficiaryTypeId != value)
                {
                    OnBeneficiaryTypeIdChanging(value);
                    ReportPropertyChanging("BeneficiaryTypeId");
                    _BeneficiaryTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BeneficiaryTypeId");
                    OnBeneficiaryTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _BeneficiaryTypeId;
        partial void OnBeneficiaryTypeIdChanging(global::System.Int32 value);
        partial void OnBeneficiaryTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Beneficiary_BeneficiaryType", "Beneficiary")]
        public EntityCollection<Beneficiary> Beneficiaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Beneficiary>("ExpenseManagerDBModel.FK_Beneficiary_BeneficiaryType", "Beneficiary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Beneficiary>("ExpenseManagerDBModel.FK_Beneficiary_BeneficiaryType", "Beneficiary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransaction_BeneficiaryType", "ExpenseTransaction")]
        public EntityCollection<ExpenseTransaction> ExpenseTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransaction_BeneficiaryType", "ExpenseTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransaction_BeneficiaryType", "ExpenseTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="Cheque")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cheque : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cheque object.
        /// </summary>
        /// <param name="chequePaymentId">Initial value of the ChequePaymentId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="chequeNo">Initial value of the ChequeNo property.</param>
        /// <param name="expenseTransactionPaymentHistoryId">Initial value of the ExpenseTransactionPaymentHistoryId property.</param>
        /// <param name="bankId">Initial value of the BankId property.</param>
        /// <param name="scannedCopy">Initial value of the ScannedCopy property.</param>
        public static Cheque CreateCheque(global::System.Int32 chequePaymentId, global::System.Double amount, global::System.String chequeNo, global::System.Int64 expenseTransactionPaymentHistoryId, global::System.Int32 bankId, global::System.Byte[] scannedCopy)
        {
            Cheque cheque = new Cheque();
            cheque.ChequePaymentId = chequePaymentId;
            cheque.Amount = amount;
            cheque.ChequeNo = chequeNo;
            cheque.ExpenseTransactionPaymentHistoryId = expenseTransactionPaymentHistoryId;
            cheque.BankId = bankId;
            cheque.ScannedCopy = scannedCopy;
            return cheque;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChequePaymentId
        {
            get
            {
                return _ChequePaymentId;
            }
            set
            {
                if (_ChequePaymentId != value)
                {
                    OnChequePaymentIdChanging(value);
                    ReportPropertyChanging("ChequePaymentId");
                    _ChequePaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChequePaymentId");
                    OnChequePaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _ChequePaymentId;
        partial void OnChequePaymentIdChanging(global::System.Int32 value);
        partial void OnChequePaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChequeNo
        {
            get
            {
                return _ChequeNo;
            }
            set
            {
                OnChequeNoChanging(value);
                ReportPropertyChanging("ChequeNo");
                _ChequeNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChequeNo");
                OnChequeNoChanged();
            }
        }
        private global::System.String _ChequeNo;
        partial void OnChequeNoChanging(global::System.String value);
        partial void OnChequeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpenseTransactionPaymentHistoryId
        {
            get
            {
                return _ExpenseTransactionPaymentHistoryId;
            }
            set
            {
                OnExpenseTransactionPaymentHistoryIdChanging(value);
                ReportPropertyChanging("ExpenseTransactionPaymentHistoryId");
                _ExpenseTransactionPaymentHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseTransactionPaymentHistoryId");
                OnExpenseTransactionPaymentHistoryIdChanged();
            }
        }
        private global::System.Int64 _ExpenseTransactionPaymentHistoryId;
        partial void OnExpenseTransactionPaymentHistoryIdChanging(global::System.Int64 value);
        partial void OnExpenseTransactionPaymentHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankId
        {
            get
            {
                return _BankId;
            }
            set
            {
                OnBankIdChanging(value);
                ReportPropertyChanging("BankId");
                _BankId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BankId");
                OnBankIdChanged();
            }
        }
        private global::System.Int32 _BankId;
        partial void OnBankIdChanging(global::System.Int32 value);
        partial void OnBankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ScannedCopy
        {
            get
            {
                return StructuralObject.GetValidValue(_ScannedCopy);
            }
            set
            {
                OnScannedCopyChanging(value);
                ReportPropertyChanging("ScannedCopy");
                _ScannedCopy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScannedCopy");
                OnScannedCopyChanged();
            }
        }
        private global::System.Byte[] _ScannedCopy;
        partial void OnScannedCopyChanging(global::System.Byte[] value);
        partial void OnScannedCopyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Cheque_Bank", "Bank")]
        public Bank Bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("ExpenseManagerDBModel.FK_Cheque_Bank", "Bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("ExpenseManagerDBModel.FK_Cheque_Bank", "Bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bank> BankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("ExpenseManagerDBModel.FK_Cheque_Bank", "Bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bank>("ExpenseManagerDBModel.FK_Cheque_Bank", "Bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Cheque_ExpenseTransactionPaymentHistory", "ExpenseTransactionPaymentHistory")]
        public ExpenseTransactionPaymentHistory ExpenseTransactionPaymentHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_Cheque_ExpenseTransactionPaymentHistory", "ExpenseTransactionPaymentHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_Cheque_ExpenseTransactionPaymentHistory", "ExpenseTransactionPaymentHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseTransactionPaymentHistory> ExpenseTransactionPaymentHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_Cheque_ExpenseTransactionPaymentHistory", "ExpenseTransactionPaymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_Cheque_ExpenseTransactionPaymentHistory", "ExpenseTransactionPaymentHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Department CreateDepartment(global::System.Int32 departmentId, global::System.String name, global::System.Int32 status)
        {
            Department department = new Department();
            department.DepartmentId = departmentId;
            department.Name = name;
            department.Status = status;
            return department;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                if (_DepartmentId != value)
                {
                    OnDepartmentIdChanging(value);
                    ReportPropertyChanging("DepartmentId");
                    _DepartmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartmentId");
                    OnDepartmentIdChanged();
                }
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Beneficiary_Department", "Beneficiary")]
        public EntityCollection<Beneficiary> Beneficiaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Beneficiary>("ExpenseManagerDBModel.FK_Beneficiary_Department", "Beneficiary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Beneficiary>("ExpenseManagerDBModel.FK_Beneficiary_Department", "Beneficiary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransaction_Department", "ExpenseTransaction")]
        public EntityCollection<ExpenseTransaction> ExpenseTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransaction_Department", "ExpenseTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransaction_Department", "ExpenseTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPayment_Department", "ExpenseTransactionPayment")]
        public EntityCollection<ExpenseTransactionPayment> ExpenseTransactionPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseTransactionPayment>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Department", "ExpenseTransactionPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseTransactionPayment>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Department", "ExpenseTransactionPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Unit_Department", "Unit")]
        public EntityCollection<Unit> Units
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Unit>("ExpenseManagerDBModel.FK_Unit_Department", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Unit>("ExpenseManagerDBModel.FK_Unit_Department", "Unit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="ExpenseCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseCategory object.
        /// </summary>
        /// <param name="expenseCategoryId">Initial value of the ExpenseCategoryId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static ExpenseCategory CreateExpenseCategory(global::System.Int32 expenseCategoryId, global::System.String title, global::System.String code, global::System.Int32 status)
        {
            ExpenseCategory expenseCategory = new ExpenseCategory();
            expenseCategory.ExpenseCategoryId = expenseCategoryId;
            expenseCategory.Title = title;
            expenseCategory.Code = code;
            expenseCategory.Status = status;
            return expenseCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseCategoryId
        {
            get
            {
                return _ExpenseCategoryId;
            }
            set
            {
                if (_ExpenseCategoryId != value)
                {
                    OnExpenseCategoryIdChanging(value);
                    ReportPropertyChanging("ExpenseCategoryId");
                    _ExpenseCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenseCategoryId");
                    OnExpenseCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _ExpenseCategoryId;
        partial void OnExpenseCategoryIdChanging(global::System.Int32 value);
        partial void OnExpenseCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_AccountsHead_ExpenseCategory", "AccountsHead")]
        public EntityCollection<AccountsHead> AccountsHeads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountsHead>("ExpenseManagerDBModel.FK_AccountsHead_ExpenseCategory", "AccountsHead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountsHead>("ExpenseManagerDBModel.FK_AccountsHead_ExpenseCategory", "AccountsHead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseItem_ExpenseCategory", "ExpenseItem")]
        public EntityCollection<ExpenseItem> ExpenseItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseItem>("ExpenseManagerDBModel.FK_ExpenseItem_ExpenseCategory", "ExpenseItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseItem>("ExpenseManagerDBModel.FK_ExpenseItem_ExpenseCategory", "ExpenseItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseCategory", "TransactionItem")]
        public EntityCollection<TransactionItem> TransactionItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseCategory", "TransactionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseCategory", "TransactionItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="ExpenseItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseItem object.
        /// </summary>
        /// <param name="expenseItemId">Initial value of the ExpenseItemId property.</param>
        /// <param name="expenseCategoryId">Initial value of the ExpenseCategoryId property.</param>
        /// <param name="accountsHeadId">Initial value of the AccountsHeadId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static ExpenseItem CreateExpenseItem(global::System.Int32 expenseItemId, global::System.Int32 expenseCategoryId, global::System.Int32 accountsHeadId, global::System.String title, global::System.String description, global::System.String code, global::System.Int32 status)
        {
            ExpenseItem expenseItem = new ExpenseItem();
            expenseItem.ExpenseItemId = expenseItemId;
            expenseItem.ExpenseCategoryId = expenseCategoryId;
            expenseItem.AccountsHeadId = accountsHeadId;
            expenseItem.Title = title;
            expenseItem.Description = description;
            expenseItem.Code = code;
            expenseItem.Status = status;
            return expenseItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseItemId
        {
            get
            {
                return _ExpenseItemId;
            }
            set
            {
                if (_ExpenseItemId != value)
                {
                    OnExpenseItemIdChanging(value);
                    ReportPropertyChanging("ExpenseItemId");
                    _ExpenseItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenseItemId");
                    OnExpenseItemIdChanged();
                }
            }
        }
        private global::System.Int32 _ExpenseItemId;
        partial void OnExpenseItemIdChanging(global::System.Int32 value);
        partial void OnExpenseItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseCategoryId
        {
            get
            {
                return _ExpenseCategoryId;
            }
            set
            {
                OnExpenseCategoryIdChanging(value);
                ReportPropertyChanging("ExpenseCategoryId");
                _ExpenseCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseCategoryId");
                OnExpenseCategoryIdChanged();
            }
        }
        private global::System.Int32 _ExpenseCategoryId;
        partial void OnExpenseCategoryIdChanging(global::System.Int32 value);
        partial void OnExpenseCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountsHeadId
        {
            get
            {
                return _AccountsHeadId;
            }
            set
            {
                OnAccountsHeadIdChanging(value);
                ReportPropertyChanging("AccountsHeadId");
                _AccountsHeadId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountsHeadId");
                OnAccountsHeadIdChanged();
            }
        }
        private global::System.Int32 _AccountsHeadId;
        partial void OnAccountsHeadIdChanging(global::System.Int32 value);
        partial void OnAccountsHeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseItem_AccountsHead", "AccountsHead")]
        public AccountsHead AccountsHead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountsHead>("ExpenseManagerDBModel.FK_ExpenseItem_AccountsHead", "AccountsHead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountsHead>("ExpenseManagerDBModel.FK_ExpenseItem_AccountsHead", "AccountsHead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountsHead> AccountsHeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountsHead>("ExpenseManagerDBModel.FK_ExpenseItem_AccountsHead", "AccountsHead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountsHead>("ExpenseManagerDBModel.FK_ExpenseItem_AccountsHead", "AccountsHead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseItem_ExpenseCategory", "ExpenseCategory")]
        public ExpenseCategory ExpenseCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_ExpenseItem_ExpenseCategory", "ExpenseCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_ExpenseItem_ExpenseCategory", "ExpenseCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseCategory> ExpenseCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_ExpenseItem_ExpenseCategory", "ExpenseCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_ExpenseItem_ExpenseCategory", "ExpenseCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseItem", "TransactionItem")]
        public EntityCollection<TransactionItem> TransactionItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseItem", "TransactionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseItem", "TransactionItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="ExpenseTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseTransaction object.
        /// </summary>
        /// <param name="expenseTransactionId">Initial value of the ExpenseTransactionId property.</param>
        /// <param name="expenseTitle">Initial value of the ExpenseTitle property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="beneficiaryId">Initial value of the BeneficiaryId property.</param>
        /// <param name="beneficiaryTypeId">Initial value of the BeneficiaryTypeId property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="registeredById">Initial value of the RegisteredById property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="transactionTime">Initial value of the TransactionTime property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="totalTransactionAmount">Initial value of the TotalTransactionAmount property.</param>
        /// <param name="approverId">Initial value of the ApproverId property.</param>
        /// <param name="totalApprovedAmount">Initial value of the TotalApprovedAmount property.</param>
        public static ExpenseTransaction CreateExpenseTransaction(global::System.Int64 expenseTransactionId, global::System.String expenseTitle, global::System.String description, global::System.Int32 beneficiaryId, global::System.Int32 beneficiaryTypeId, global::System.Int32 departmentId, global::System.Int32 registeredById, global::System.String transactionDate, global::System.String transactionTime, global::System.Int32 status, global::System.Double totalTransactionAmount, global::System.Int32 approverId, global::System.Double totalApprovedAmount)
        {
            ExpenseTransaction expenseTransaction = new ExpenseTransaction();
            expenseTransaction.ExpenseTransactionId = expenseTransactionId;
            expenseTransaction.ExpenseTitle = expenseTitle;
            expenseTransaction.Description = description;
            expenseTransaction.BeneficiaryId = beneficiaryId;
            expenseTransaction.BeneficiaryTypeId = beneficiaryTypeId;
            expenseTransaction.DepartmentId = departmentId;
            expenseTransaction.RegisteredById = registeredById;
            expenseTransaction.TransactionDate = transactionDate;
            expenseTransaction.TransactionTime = transactionTime;
            expenseTransaction.Status = status;
            expenseTransaction.TotalTransactionAmount = totalTransactionAmount;
            expenseTransaction.ApproverId = approverId;
            expenseTransaction.TotalApprovedAmount = totalApprovedAmount;
            return expenseTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpenseTransactionId
        {
            get
            {
                return _ExpenseTransactionId;
            }
            set
            {
                if (_ExpenseTransactionId != value)
                {
                    OnExpenseTransactionIdChanging(value);
                    ReportPropertyChanging("ExpenseTransactionId");
                    _ExpenseTransactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenseTransactionId");
                    OnExpenseTransactionIdChanged();
                }
            }
        }
        private global::System.Int64 _ExpenseTransactionId;
        partial void OnExpenseTransactionIdChanging(global::System.Int64 value);
        partial void OnExpenseTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExpenseTitle
        {
            get
            {
                return _ExpenseTitle;
            }
            set
            {
                OnExpenseTitleChanging(value);
                ReportPropertyChanging("ExpenseTitle");
                _ExpenseTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExpenseTitle");
                OnExpenseTitleChanged();
            }
        }
        private global::System.String _ExpenseTitle;
        partial void OnExpenseTitleChanging(global::System.String value);
        partial void OnExpenseTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BeneficiaryId
        {
            get
            {
                return _BeneficiaryId;
            }
            set
            {
                OnBeneficiaryIdChanging(value);
                ReportPropertyChanging("BeneficiaryId");
                _BeneficiaryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeneficiaryId");
                OnBeneficiaryIdChanged();
            }
        }
        private global::System.Int32 _BeneficiaryId;
        partial void OnBeneficiaryIdChanging(global::System.Int32 value);
        partial void OnBeneficiaryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BeneficiaryTypeId
        {
            get
            {
                return _BeneficiaryTypeId;
            }
            set
            {
                OnBeneficiaryTypeIdChanging(value);
                ReportPropertyChanging("BeneficiaryTypeId");
                _BeneficiaryTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeneficiaryTypeId");
                OnBeneficiaryTypeIdChanged();
            }
        }
        private global::System.Int32 _BeneficiaryTypeId;
        partial void OnBeneficiaryTypeIdChanging(global::System.Int32 value);
        partial void OnBeneficiaryTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegisteredById
        {
            get
            {
                return _RegisteredById;
            }
            set
            {
                OnRegisteredByIdChanging(value);
                ReportPropertyChanging("RegisteredById");
                _RegisteredById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisteredById");
                OnRegisteredByIdChanged();
            }
        }
        private global::System.Int32 _RegisteredById;
        partial void OnRegisteredByIdChanging(global::System.Int32 value);
        partial void OnRegisteredByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.String _TransactionDate;
        partial void OnTransactionDateChanging(global::System.String value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionTime
        {
            get
            {
                return _TransactionTime;
            }
            set
            {
                OnTransactionTimeChanging(value);
                ReportPropertyChanging("TransactionTime");
                _TransactionTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransactionTime");
                OnTransactionTimeChanged();
            }
        }
        private global::System.String _TransactionTime;
        partial void OnTransactionTimeChanging(global::System.String value);
        partial void OnTransactionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalTransactionAmount
        {
            get
            {
                return _TotalTransactionAmount;
            }
            set
            {
                OnTotalTransactionAmountChanging(value);
                ReportPropertyChanging("TotalTransactionAmount");
                _TotalTransactionAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalTransactionAmount");
                OnTotalTransactionAmountChanged();
            }
        }
        private global::System.Double _TotalTransactionAmount;
        partial void OnTotalTransactionAmountChanging(global::System.Double value);
        partial void OnTotalTransactionAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApproverId
        {
            get
            {
                return _ApproverId;
            }
            set
            {
                OnApproverIdChanging(value);
                ReportPropertyChanging("ApproverId");
                _ApproverId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproverId");
                OnApproverIdChanged();
            }
        }
        private global::System.Int32 _ApproverId;
        partial void OnApproverIdChanging(global::System.Int32 value);
        partial void OnApproverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DateApproved
        {
            get
            {
                return _DateApproved;
            }
            set
            {
                OnDateApprovedChanging(value);
                ReportPropertyChanging("DateApproved");
                _DateApproved = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DateApproved");
                OnDateApprovedChanged();
            }
        }
        private global::System.String _DateApproved;
        partial void OnDateApprovedChanging(global::System.String value);
        partial void OnDateApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TimeApproved
        {
            get
            {
                return _TimeApproved;
            }
            set
            {
                OnTimeApprovedChanging(value);
                ReportPropertyChanging("TimeApproved");
                _TimeApproved = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeApproved");
                OnTimeApprovedChanged();
            }
        }
        private global::System.String _TimeApproved;
        partial void OnTimeApprovedChanging(global::System.String value);
        partial void OnTimeApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalApprovedAmount
        {
            get
            {
                return _TotalApprovedAmount;
            }
            set
            {
                OnTotalApprovedAmountChanging(value);
                ReportPropertyChanging("TotalApprovedAmount");
                _TotalApprovedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalApprovedAmount");
                OnTotalApprovedAmountChanged();
            }
        }
        private global::System.Double _TotalApprovedAmount;
        partial void OnTotalApprovedAmountChanging(global::System.Double value);
        partial void OnTotalApprovedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproverComment
        {
            get
            {
                return _ApproverComment;
            }
            set
            {
                OnApproverCommentChanging(value);
                ReportPropertyChanging("ApproverComment");
                _ApproverComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproverComment");
                OnApproverCommentChanged();
            }
        }
        private global::System.String _ApproverComment;
        partial void OnApproverCommentChanging(global::System.String value);
        partial void OnApproverCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransaction_Beneficiary", "Beneficiary")]
        public Beneficiary Beneficiary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransaction_Beneficiary", "Beneficiary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransaction_Beneficiary", "Beneficiary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Beneficiary> BeneficiaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransaction_Beneficiary", "Beneficiary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransaction_Beneficiary", "Beneficiary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransaction_BeneficiaryType", "BeneficiaryType")]
        public BeneficiaryType BeneficiaryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BeneficiaryType>("ExpenseManagerDBModel.FK_ExpenseTransaction_BeneficiaryType", "BeneficiaryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BeneficiaryType>("ExpenseManagerDBModel.FK_ExpenseTransaction_BeneficiaryType", "BeneficiaryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BeneficiaryType> BeneficiaryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BeneficiaryType>("ExpenseManagerDBModel.FK_ExpenseTransaction_BeneficiaryType", "BeneficiaryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BeneficiaryType>("ExpenseManagerDBModel.FK_ExpenseTransaction_BeneficiaryType", "BeneficiaryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransaction_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_ExpenseTransaction_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_ExpenseTransaction_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_ExpenseTransaction_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("ExpenseManagerDBModel.FK_ExpenseTransaction_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPayment_ExpenseTransaction", "ExpenseTransactionPayment")]
        public EntityCollection<ExpenseTransactionPayment> ExpenseTransactionPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseTransactionPayment>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_ExpenseTransaction", "ExpenseTransactionPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseTransactionPayment>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_ExpenseTransaction", "ExpenseTransactionPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_ExpenseTransaction", "ExpenseTransactionPaymentHistory")]
        public EntityCollection<ExpenseTransactionPaymentHistory> ExpenseTransactionPaymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransaction", "ExpenseTransactionPaymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransaction", "ExpenseTransactionPaymentHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseTransaction", "TransactionItem")]
        public EntityCollection<TransactionItem> TransactionItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseTransaction", "TransactionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseTransaction", "TransactionItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="ExpenseTransactionPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseTransactionPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseTransactionPayment object.
        /// </summary>
        /// <param name="expenseTransactionPaymentId">Initial value of the ExpenseTransactionPaymentId property.</param>
        /// <param name="expenseTransactionId">Initial value of the ExpenseTransactionId property.</param>
        /// <param name="totalAmountPayable">Initial value of the TotalAmountPayable property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="lastPaymentDate">Initial value of the LastPaymentDate property.</param>
        /// <param name="lastPaymentTime">Initial value of the LastPaymentTime property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="amountPaid">Initial value of the AmountPaid property.</param>
        /// <param name="beneficiaryId">Initial value of the BeneficiaryId property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        public static ExpenseTransactionPayment CreateExpenseTransactionPayment(global::System.Int64 expenseTransactionPaymentId, global::System.Int64 expenseTransactionId, global::System.Double totalAmountPayable, global::System.Double balance, global::System.String lastPaymentDate, global::System.String lastPaymentTime, global::System.Int32 status, global::System.Double amountPaid, global::System.Int32 beneficiaryId, global::System.Int32 departmentId)
        {
            ExpenseTransactionPayment expenseTransactionPayment = new ExpenseTransactionPayment();
            expenseTransactionPayment.ExpenseTransactionPaymentId = expenseTransactionPaymentId;
            expenseTransactionPayment.ExpenseTransactionId = expenseTransactionId;
            expenseTransactionPayment.TotalAmountPayable = totalAmountPayable;
            expenseTransactionPayment.Balance = balance;
            expenseTransactionPayment.LastPaymentDate = lastPaymentDate;
            expenseTransactionPayment.LastPaymentTime = lastPaymentTime;
            expenseTransactionPayment.Status = status;
            expenseTransactionPayment.AmountPaid = amountPaid;
            expenseTransactionPayment.BeneficiaryId = beneficiaryId;
            expenseTransactionPayment.DepartmentId = departmentId;
            return expenseTransactionPayment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpenseTransactionPaymentId
        {
            get
            {
                return _ExpenseTransactionPaymentId;
            }
            set
            {
                if (_ExpenseTransactionPaymentId != value)
                {
                    OnExpenseTransactionPaymentIdChanging(value);
                    ReportPropertyChanging("ExpenseTransactionPaymentId");
                    _ExpenseTransactionPaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenseTransactionPaymentId");
                    OnExpenseTransactionPaymentIdChanged();
                }
            }
        }
        private global::System.Int64 _ExpenseTransactionPaymentId;
        partial void OnExpenseTransactionPaymentIdChanging(global::System.Int64 value);
        partial void OnExpenseTransactionPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpenseTransactionId
        {
            get
            {
                return _ExpenseTransactionId;
            }
            set
            {
                OnExpenseTransactionIdChanging(value);
                ReportPropertyChanging("ExpenseTransactionId");
                _ExpenseTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseTransactionId");
                OnExpenseTransactionIdChanged();
            }
        }
        private global::System.Int64 _ExpenseTransactionId;
        partial void OnExpenseTransactionIdChanging(global::System.Int64 value);
        partial void OnExpenseTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalAmountPayable
        {
            get
            {
                return _TotalAmountPayable;
            }
            set
            {
                OnTotalAmountPayableChanging(value);
                ReportPropertyChanging("TotalAmountPayable");
                _TotalAmountPayable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmountPayable");
                OnTotalAmountPayableChanged();
            }
        }
        private global::System.Double _TotalAmountPayable;
        partial void OnTotalAmountPayableChanging(global::System.Double value);
        partial void OnTotalAmountPayableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Double _Balance;
        partial void OnBalanceChanging(global::System.Double value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastPaymentDate
        {
            get
            {
                return _LastPaymentDate;
            }
            set
            {
                OnLastPaymentDateChanging(value);
                ReportPropertyChanging("LastPaymentDate");
                _LastPaymentDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastPaymentDate");
                OnLastPaymentDateChanged();
            }
        }
        private global::System.String _LastPaymentDate;
        partial void OnLastPaymentDateChanging(global::System.String value);
        partial void OnLastPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastPaymentTime
        {
            get
            {
                return _LastPaymentTime;
            }
            set
            {
                OnLastPaymentTimeChanging(value);
                ReportPropertyChanging("LastPaymentTime");
                _LastPaymentTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastPaymentTime");
                OnLastPaymentTimeChanged();
            }
        }
        private global::System.String _LastPaymentTime;
        partial void OnLastPaymentTimeChanging(global::System.String value);
        partial void OnLastPaymentTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AmountPaid
        {
            get
            {
                return _AmountPaid;
            }
            set
            {
                OnAmountPaidChanging(value);
                ReportPropertyChanging("AmountPaid");
                _AmountPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountPaid");
                OnAmountPaidChanged();
            }
        }
        private global::System.Double _AmountPaid;
        partial void OnAmountPaidChanging(global::System.Double value);
        partial void OnAmountPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BeneficiaryId
        {
            get
            {
                return _BeneficiaryId;
            }
            set
            {
                OnBeneficiaryIdChanging(value);
                ReportPropertyChanging("BeneficiaryId");
                _BeneficiaryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeneficiaryId");
                OnBeneficiaryIdChanged();
            }
        }
        private global::System.Int32 _BeneficiaryId;
        partial void OnBeneficiaryIdChanging(global::System.Int32 value);
        partial void OnBeneficiaryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPayment_Beneficiary", "Beneficiary")]
        public Beneficiary Beneficiary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Beneficiary", "Beneficiary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Beneficiary", "Beneficiary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Beneficiary> BeneficiaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Beneficiary", "Beneficiary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Beneficiary", "Beneficiary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPayment_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPayment_ExpenseTransaction", "ExpenseTransaction")]
        public ExpenseTransaction ExpenseTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_ExpenseTransaction", "ExpenseTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_ExpenseTransaction", "ExpenseTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseTransaction> ExpenseTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_ExpenseTransaction", "ExpenseTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransactionPayment_ExpenseTransaction", "ExpenseTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_ExpenseTransactionPayment", "ExpenseTransactionPaymentHistory")]
        public EntityCollection<ExpenseTransactionPaymentHistory> ExpenseTransactionPaymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransactionPayment", "ExpenseTransactionPaymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransactionPayment", "ExpenseTransactionPaymentHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="ExpenseTransactionPaymentHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseTransactionPaymentHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseTransactionPaymentHistory object.
        /// </summary>
        /// <param name="expenseTransactionPaymentHistoryId">Initial value of the ExpenseTransactionPaymentHistoryId property.</param>
        /// <param name="expenseTransactionId">Initial value of the ExpenseTransactionId property.</param>
        /// <param name="amountPaid">Initial value of the AmountPaid property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="paymentTime">Initial value of the PaymentTime property.</param>
        /// <param name="paidById">Initial value of the PaidById property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="expenseTransactionPaymentId">Initial value of the ExpenseTransactionPaymentId property.</param>
        /// <param name="paymentModeId">Initial value of the PaymentModeId property.</param>
        /// <param name="beneficiaryId">Initial value of the BeneficiaryId property.</param>
        public static ExpenseTransactionPaymentHistory CreateExpenseTransactionPaymentHistory(global::System.Int64 expenseTransactionPaymentHistoryId, global::System.Int64 expenseTransactionId, global::System.Double amountPaid, global::System.String paymentDate, global::System.String paymentTime, global::System.Int32 paidById, global::System.String comment, global::System.Int32 status, global::System.Int64 expenseTransactionPaymentId, global::System.Int32 paymentModeId, global::System.Int32 beneficiaryId)
        {
            ExpenseTransactionPaymentHistory expenseTransactionPaymentHistory = new ExpenseTransactionPaymentHistory();
            expenseTransactionPaymentHistory.ExpenseTransactionPaymentHistoryId = expenseTransactionPaymentHistoryId;
            expenseTransactionPaymentHistory.ExpenseTransactionId = expenseTransactionId;
            expenseTransactionPaymentHistory.AmountPaid = amountPaid;
            expenseTransactionPaymentHistory.PaymentDate = paymentDate;
            expenseTransactionPaymentHistory.PaymentTime = paymentTime;
            expenseTransactionPaymentHistory.PaidById = paidById;
            expenseTransactionPaymentHistory.Comment = comment;
            expenseTransactionPaymentHistory.Status = status;
            expenseTransactionPaymentHistory.ExpenseTransactionPaymentId = expenseTransactionPaymentId;
            expenseTransactionPaymentHistory.PaymentModeId = paymentModeId;
            expenseTransactionPaymentHistory.BeneficiaryId = beneficiaryId;
            return expenseTransactionPaymentHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpenseTransactionPaymentHistoryId
        {
            get
            {
                return _ExpenseTransactionPaymentHistoryId;
            }
            set
            {
                if (_ExpenseTransactionPaymentHistoryId != value)
                {
                    OnExpenseTransactionPaymentHistoryIdChanging(value);
                    ReportPropertyChanging("ExpenseTransactionPaymentHistoryId");
                    _ExpenseTransactionPaymentHistoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenseTransactionPaymentHistoryId");
                    OnExpenseTransactionPaymentHistoryIdChanged();
                }
            }
        }
        private global::System.Int64 _ExpenseTransactionPaymentHistoryId;
        partial void OnExpenseTransactionPaymentHistoryIdChanging(global::System.Int64 value);
        partial void OnExpenseTransactionPaymentHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpenseTransactionId
        {
            get
            {
                return _ExpenseTransactionId;
            }
            set
            {
                OnExpenseTransactionIdChanging(value);
                ReportPropertyChanging("ExpenseTransactionId");
                _ExpenseTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseTransactionId");
                OnExpenseTransactionIdChanged();
            }
        }
        private global::System.Int64 _ExpenseTransactionId;
        partial void OnExpenseTransactionIdChanging(global::System.Int64 value);
        partial void OnExpenseTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AmountPaid
        {
            get
            {
                return _AmountPaid;
            }
            set
            {
                OnAmountPaidChanging(value);
                ReportPropertyChanging("AmountPaid");
                _AmountPaid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountPaid");
                OnAmountPaidChanged();
            }
        }
        private global::System.Double _AmountPaid;
        partial void OnAmountPaidChanging(global::System.Double value);
        partial void OnAmountPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.String _PaymentDate;
        partial void OnPaymentDateChanging(global::System.String value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentTime
        {
            get
            {
                return _PaymentTime;
            }
            set
            {
                OnPaymentTimeChanging(value);
                ReportPropertyChanging("PaymentTime");
                _PaymentTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PaymentTime");
                OnPaymentTimeChanged();
            }
        }
        private global::System.String _PaymentTime;
        partial void OnPaymentTimeChanging(global::System.String value);
        partial void OnPaymentTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaidById
        {
            get
            {
                return _PaidById;
            }
            set
            {
                OnPaidByIdChanging(value);
                ReportPropertyChanging("PaidById");
                _PaidById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaidById");
                OnPaidByIdChanged();
            }
        }
        private global::System.Int32 _PaidById;
        partial void OnPaidByIdChanging(global::System.Int32 value);
        partial void OnPaidByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpenseTransactionPaymentId
        {
            get
            {
                return _ExpenseTransactionPaymentId;
            }
            set
            {
                OnExpenseTransactionPaymentIdChanging(value);
                ReportPropertyChanging("ExpenseTransactionPaymentId");
                _ExpenseTransactionPaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseTransactionPaymentId");
                OnExpenseTransactionPaymentIdChanged();
            }
        }
        private global::System.Int64 _ExpenseTransactionPaymentId;
        partial void OnExpenseTransactionPaymentIdChanging(global::System.Int64 value);
        partial void OnExpenseTransactionPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentModeId
        {
            get
            {
                return _PaymentModeId;
            }
            set
            {
                OnPaymentModeIdChanging(value);
                ReportPropertyChanging("PaymentModeId");
                _PaymentModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentModeId");
                OnPaymentModeIdChanged();
            }
        }
        private global::System.Int32 _PaymentModeId;
        partial void OnPaymentModeIdChanging(global::System.Int32 value);
        partial void OnPaymentModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BeneficiaryId
        {
            get
            {
                return _BeneficiaryId;
            }
            set
            {
                OnBeneficiaryIdChanging(value);
                ReportPropertyChanging("BeneficiaryId");
                _BeneficiaryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeneficiaryId");
                OnBeneficiaryIdChanged();
            }
        }
        private global::System.Int32 _BeneficiaryId;
        partial void OnBeneficiaryIdChanging(global::System.Int32 value);
        partial void OnBeneficiaryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_Beneficiary", "Beneficiary")]
        public Beneficiary Beneficiary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_Beneficiary", "Beneficiary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_Beneficiary", "Beneficiary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Beneficiary> BeneficiaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_Beneficiary", "Beneficiary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_Beneficiary", "Beneficiary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Cheque_ExpenseTransactionPaymentHistory", "Cheque")]
        public EntityCollection<Cheque> Cheques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cheque>("ExpenseManagerDBModel.FK_Cheque_ExpenseTransactionPaymentHistory", "Cheque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cheque>("ExpenseManagerDBModel.FK_Cheque_ExpenseTransactionPaymentHistory", "Cheque", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_ExpenseTransaction", "ExpenseTransaction")]
        public ExpenseTransaction ExpenseTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransaction", "ExpenseTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransaction", "ExpenseTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseTransaction> ExpenseTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransaction", "ExpenseTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransaction", "ExpenseTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_ExpenseTransactionPayment", "ExpenseTransactionPayment")]
        public ExpenseTransactionPayment ExpenseTransactionPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransactionPayment>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransactionPayment", "ExpenseTransactionPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransactionPayment>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransactionPayment", "ExpenseTransactionPayment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseTransactionPayment> ExpenseTransactionPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransactionPayment>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransactionPayment", "ExpenseTransactionPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseTransactionPayment>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_ExpenseTransactionPayment", "ExpenseTransactionPayment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_PaymentMode", "PaymentMode")]
        public PaymentMode PaymentMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMode>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_PaymentMode", "PaymentMode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMode>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_PaymentMode", "PaymentMode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentMode> PaymentModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMode>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_PaymentMode", "PaymentMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentMode>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_PaymentMode", "PaymentMode", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="ExpenseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseType object.
        /// </summary>
        /// <param name="expenseTypeId">Initial value of the ExpenseTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static ExpenseType CreateExpenseType(global::System.Int32 expenseTypeId, global::System.String name, global::System.Int32 status)
        {
            ExpenseType expenseType = new ExpenseType();
            expenseType.ExpenseTypeId = expenseTypeId;
            expenseType.Name = name;
            expenseType.Status = status;
            return expenseType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseTypeId
        {
            get
            {
                return _ExpenseTypeId;
            }
            set
            {
                if (_ExpenseTypeId != value)
                {
                    OnExpenseTypeIdChanging(value);
                    ReportPropertyChanging("ExpenseTypeId");
                    _ExpenseTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenseTypeId");
                    OnExpenseTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ExpenseTypeId;
        partial void OnExpenseTypeIdChanging(global::System.Int32 value);
        partial void OnExpenseTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseType", "TransactionItem")]
        public EntityCollection<TransactionItem> TransactionItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseType", "TransactionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseType", "TransactionItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="FixedAsset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FixedAsset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FixedAsset object.
        /// </summary>
        /// <param name="fixedAssetId">Initial value of the FixedAssetId property.</param>
        /// <param name="assetTypeId">Initial value of the AssetTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="costOfPurchase">Initial value of the CostOfPurchase property.</param>
        /// <param name="costOfTransportationAndInstallation">Initial value of the CostOfTransportationAndInstallation property.</param>
        /// <param name="datePurchased">Initial value of the DatePurchased property.</param>
        /// <param name="scannedReceipt">Initial value of the ScannedReceipt property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="assetCategoryId">Initial value of the AssetCategoryId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static FixedAsset CreateFixedAsset(global::System.Int32 fixedAssetId, global::System.Int32 assetTypeId, global::System.String name, global::System.String description, global::System.Double costOfPurchase, global::System.Double costOfTransportationAndInstallation, global::System.String datePurchased, global::System.Byte[] scannedReceipt, global::System.Int64 code, global::System.Int32 status, global::System.Int32 assetCategoryId, global::System.Int32 quantity)
        {
            FixedAsset fixedAsset = new FixedAsset();
            fixedAsset.FixedAssetId = fixedAssetId;
            fixedAsset.AssetTypeId = assetTypeId;
            fixedAsset.Name = name;
            fixedAsset.Description = description;
            fixedAsset.CostOfPurchase = costOfPurchase;
            fixedAsset.CostOfTransportationAndInstallation = costOfTransportationAndInstallation;
            fixedAsset.DatePurchased = datePurchased;
            fixedAsset.ScannedReceipt = scannedReceipt;
            fixedAsset.Code = code;
            fixedAsset.Status = status;
            fixedAsset.AssetCategoryId = assetCategoryId;
            fixedAsset.Quantity = quantity;
            return fixedAsset;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FixedAssetId
        {
            get
            {
                return _FixedAssetId;
            }
            set
            {
                if (_FixedAssetId != value)
                {
                    OnFixedAssetIdChanging(value);
                    ReportPropertyChanging("FixedAssetId");
                    _FixedAssetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FixedAssetId");
                    OnFixedAssetIdChanged();
                }
            }
        }
        private global::System.Int32 _FixedAssetId;
        partial void OnFixedAssetIdChanging(global::System.Int32 value);
        partial void OnFixedAssetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetTypeId
        {
            get
            {
                return _AssetTypeId;
            }
            set
            {
                OnAssetTypeIdChanging(value);
                ReportPropertyChanging("AssetTypeId");
                _AssetTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetTypeId");
                OnAssetTypeIdChanged();
            }
        }
        private global::System.Int32 _AssetTypeId;
        partial void OnAssetTypeIdChanging(global::System.Int32 value);
        partial void OnAssetTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfPurchase
        {
            get
            {
                return _CostOfPurchase;
            }
            set
            {
                OnCostOfPurchaseChanging(value);
                ReportPropertyChanging("CostOfPurchase");
                _CostOfPurchase = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfPurchase");
                OnCostOfPurchaseChanged();
            }
        }
        private global::System.Double _CostOfPurchase;
        partial void OnCostOfPurchaseChanging(global::System.Double value);
        partial void OnCostOfPurchaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CostOfTransportationAndInstallation
        {
            get
            {
                return _CostOfTransportationAndInstallation;
            }
            set
            {
                OnCostOfTransportationAndInstallationChanging(value);
                ReportPropertyChanging("CostOfTransportationAndInstallation");
                _CostOfTransportationAndInstallation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostOfTransportationAndInstallation");
                OnCostOfTransportationAndInstallationChanged();
            }
        }
        private global::System.Double _CostOfTransportationAndInstallation;
        partial void OnCostOfTransportationAndInstallationChanging(global::System.Double value);
        partial void OnCostOfTransportationAndInstallationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DatePurchased
        {
            get
            {
                return _DatePurchased;
            }
            set
            {
                OnDatePurchasedChanging(value);
                ReportPropertyChanging("DatePurchased");
                _DatePurchased = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DatePurchased");
                OnDatePurchasedChanged();
            }
        }
        private global::System.String _DatePurchased;
        partial void OnDatePurchasedChanging(global::System.String value);
        partial void OnDatePurchasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ScannedReceipt
        {
            get
            {
                return StructuralObject.GetValidValue(_ScannedReceipt);
            }
            set
            {
                OnScannedReceiptChanging(value);
                ReportPropertyChanging("ScannedReceipt");
                _ScannedReceipt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScannedReceipt");
                OnScannedReceiptChanged();
            }
        }
        private global::System.Byte[] _ScannedReceipt;
        partial void OnScannedReceiptChanging(global::System.Byte[] value);
        partial void OnScannedReceiptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Make
        {
            get
            {
                return _Make;
            }
            set
            {
                OnMakeChanging(value);
                ReportPropertyChanging("Make");
                _Make = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Make");
                OnMakeChanged();
            }
        }
        private global::System.String _Make;
        partial void OnMakeChanging(global::System.String value);
        partial void OnMakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.Int64 _Code;
        partial void OnCodeChanging(global::System.Int64 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetCategoryId
        {
            get
            {
                return _AssetCategoryId;
            }
            set
            {
                OnAssetCategoryIdChanging(value);
                ReportPropertyChanging("AssetCategoryId");
                _AssetCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetCategoryId");
                OnAssetCategoryIdChanged();
            }
        }
        private global::System.Int32 _AssetCategoryId;
        partial void OnAssetCategoryIdChanging(global::System.Int32 value);
        partial void OnAssetCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_FixedAsset_AssetCategory", "AssetCategory")]
        public AssetCategory AssetCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_FixedAsset_AssetCategory", "AssetCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_FixedAsset_AssetCategory", "AssetCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssetCategory> AssetCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_FixedAsset_AssetCategory", "AssetCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_FixedAsset_AssetCategory", "AssetCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_FixedAsset_AssetType", "AssetType")]
        public AssetType AssetType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("ExpenseManagerDBModel.FK_FixedAsset_AssetType", "AssetType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("ExpenseManagerDBModel.FK_FixedAsset_AssetType", "AssetType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssetType> AssetTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("ExpenseManagerDBModel.FK_FixedAsset_AssetType", "AssetType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssetType>("ExpenseManagerDBModel.FK_FixedAsset_AssetType", "AssetType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="LiquidAsset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LiquidAsset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LiquidAsset object.
        /// </summary>
        /// <param name="liquidAssetId">Initial value of the LiquidAssetId property.</param>
        /// <param name="assetTypeId">Initial value of the AssetTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="assetCategoryId">Initial value of the AssetCategoryId property.</param>
        public static LiquidAsset CreateLiquidAsset(global::System.Int32 liquidAssetId, global::System.Int32 assetTypeId, global::System.String name, global::System.String code, global::System.Int32 status, global::System.Double amount, global::System.Int32 assetCategoryId)
        {
            LiquidAsset liquidAsset = new LiquidAsset();
            liquidAsset.LiquidAssetId = liquidAssetId;
            liquidAsset.AssetTypeId = assetTypeId;
            liquidAsset.Name = name;
            liquidAsset.Code = code;
            liquidAsset.Status = status;
            liquidAsset.Amount = amount;
            liquidAsset.AssetCategoryId = assetCategoryId;
            return liquidAsset;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LiquidAssetId
        {
            get
            {
                return _LiquidAssetId;
            }
            set
            {
                if (_LiquidAssetId != value)
                {
                    OnLiquidAssetIdChanging(value);
                    ReportPropertyChanging("LiquidAssetId");
                    _LiquidAssetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LiquidAssetId");
                    OnLiquidAssetIdChanged();
                }
            }
        }
        private global::System.Int32 _LiquidAssetId;
        partial void OnLiquidAssetIdChanging(global::System.Int32 value);
        partial void OnLiquidAssetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetTypeId
        {
            get
            {
                return _AssetTypeId;
            }
            set
            {
                OnAssetTypeIdChanging(value);
                ReportPropertyChanging("AssetTypeId");
                _AssetTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetTypeId");
                OnAssetTypeIdChanged();
            }
        }
        private global::System.Int32 _AssetTypeId;
        partial void OnAssetTypeIdChanging(global::System.Int32 value);
        partial void OnAssetTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetCategoryId
        {
            get
            {
                return _AssetCategoryId;
            }
            set
            {
                OnAssetCategoryIdChanging(value);
                ReportPropertyChanging("AssetCategoryId");
                _AssetCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetCategoryId");
                OnAssetCategoryIdChanged();
            }
        }
        private global::System.Int32 _AssetCategoryId;
        partial void OnAssetCategoryIdChanging(global::System.Int32 value);
        partial void OnAssetCategoryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_LiquidAsset_AssetCategory", "AssetCategory")]
        public AssetCategory AssetCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_LiquidAsset_AssetCategory", "AssetCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_LiquidAsset_AssetCategory", "AssetCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssetCategory> AssetCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_LiquidAsset_AssetCategory", "AssetCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssetCategory>("ExpenseManagerDBModel.FK_LiquidAsset_AssetCategory", "AssetCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_LiquidAsset_AssetType", "AssetType")]
        public AssetType AssetType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("ExpenseManagerDBModel.FK_LiquidAsset_AssetType", "AssetType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("ExpenseManagerDBModel.FK_LiquidAsset_AssetType", "AssetType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssetType> AssetTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("ExpenseManagerDBModel.FK_LiquidAsset_AssetType", "AssetType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssetType>("ExpenseManagerDBModel.FK_LiquidAsset_AssetType", "AssetType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="PaymentMode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentMode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentMode object.
        /// </summary>
        /// <param name="paymentModeId">Initial value of the PaymentModeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static PaymentMode CreatePaymentMode(global::System.Int32 paymentModeId, global::System.String name, global::System.Int32 status)
        {
            PaymentMode paymentMode = new PaymentMode();
            paymentMode.PaymentModeId = paymentModeId;
            paymentMode.Name = name;
            paymentMode.Status = status;
            return paymentMode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentModeId
        {
            get
            {
                return _PaymentModeId;
            }
            set
            {
                if (_PaymentModeId != value)
                {
                    OnPaymentModeIdChanging(value);
                    ReportPropertyChanging("PaymentModeId");
                    _PaymentModeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentModeId");
                    OnPaymentModeIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentModeId;
        partial void OnPaymentModeIdChanging(global::System.Int32 value);
        partial void OnPaymentModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_ExpenseTransactionPaymentHistory_PaymentMode", "ExpenseTransactionPaymentHistory")]
        public EntityCollection<ExpenseTransactionPaymentHistory> ExpenseTransactionPaymentHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_PaymentMode", "ExpenseTransactionPaymentHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseTransactionPaymentHistory>("ExpenseManagerDBModel.FK_ExpenseTransactionPaymentHistory_PaymentMode", "ExpenseTransactionPaymentHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="PaymentVoucherNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentVoucherNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentVoucherNumber object.
        /// </summary>
        /// <param name="paymentVoucherNumberId">Initial value of the PaymentVoucherNumberId property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="transactionTotalAmount">Initial value of the TransactionTotalAmount property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="dateSubmitted">Initial value of the DateSubmitted property.</param>
        public static PaymentVoucherNumber CreatePaymentVoucherNumber(global::System.Int32 paymentVoucherNumberId, global::System.Int64 transactionId, global::System.Double transactionTotalAmount, global::System.String paymentDate, global::System.String dateSubmitted)
        {
            PaymentVoucherNumber paymentVoucherNumber = new PaymentVoucherNumber();
            paymentVoucherNumber.PaymentVoucherNumberId = paymentVoucherNumberId;
            paymentVoucherNumber.TransactionId = transactionId;
            paymentVoucherNumber.TransactionTotalAmount = transactionTotalAmount;
            paymentVoucherNumber.PaymentDate = paymentDate;
            paymentVoucherNumber.DateSubmitted = dateSubmitted;
            return paymentVoucherNumber;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentVoucherNumberId
        {
            get
            {
                return _PaymentVoucherNumberId;
            }
            set
            {
                if (_PaymentVoucherNumberId != value)
                {
                    OnPaymentVoucherNumberIdChanging(value);
                    ReportPropertyChanging("PaymentVoucherNumberId");
                    _PaymentVoucherNumberId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentVoucherNumberId");
                    OnPaymentVoucherNumberIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentVoucherNumberId;
        partial void OnPaymentVoucherNumberIdChanging(global::System.Int32 value);
        partial void OnPaymentVoucherNumberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.Int64 _TransactionId;
        partial void OnTransactionIdChanging(global::System.Int64 value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TransactionTotalAmount
        {
            get
            {
                return _TransactionTotalAmount;
            }
            set
            {
                OnTransactionTotalAmountChanging(value);
                ReportPropertyChanging("TransactionTotalAmount");
                _TransactionTotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionTotalAmount");
                OnTransactionTotalAmountChanged();
            }
        }
        private global::System.Double _TransactionTotalAmount;
        partial void OnTransactionTotalAmountChanging(global::System.Double value);
        partial void OnTransactionTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.String _PaymentDate;
        partial void OnPaymentDateChanging(global::System.String value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DateSubmitted
        {
            get
            {
                return _DateSubmitted;
            }
            set
            {
                OnDateSubmittedChanging(value);
                ReportPropertyChanging("DateSubmitted");
                _DateSubmitted = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DateSubmitted");
                OnDateSubmittedChanged();
            }
        }
        private global::System.String _DateSubmitted;
        partial void OnDateSubmittedChanging(global::System.String value);
        partial void OnDateSubmittedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="StaffUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StaffUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StaffUser object.
        /// </summary>
        /// <param name="staffUserId">Initial value of the StaffUserId property.</param>
        /// <param name="beneficiaryId">Initial value of the BeneficiaryId property.</param>
        /// <param name="portalUserId">Initial value of the PortalUserId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static StaffUser CreateStaffUser(global::System.Int32 staffUserId, global::System.Int32 beneficiaryId, global::System.Int64 portalUserId, global::System.Int32 status)
        {
            StaffUser staffUser = new StaffUser();
            staffUser.StaffUserId = staffUserId;
            staffUser.BeneficiaryId = beneficiaryId;
            staffUser.PortalUserId = portalUserId;
            staffUser.Status = status;
            return staffUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StaffUserId
        {
            get
            {
                return _StaffUserId;
            }
            set
            {
                if (_StaffUserId != value)
                {
                    OnStaffUserIdChanging(value);
                    ReportPropertyChanging("StaffUserId");
                    _StaffUserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StaffUserId");
                    OnStaffUserIdChanged();
                }
            }
        }
        private global::System.Int32 _StaffUserId;
        partial void OnStaffUserIdChanging(global::System.Int32 value);
        partial void OnStaffUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BeneficiaryId
        {
            get
            {
                return _BeneficiaryId;
            }
            set
            {
                OnBeneficiaryIdChanging(value);
                ReportPropertyChanging("BeneficiaryId");
                _BeneficiaryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeneficiaryId");
                OnBeneficiaryIdChanged();
            }
        }
        private global::System.Int32 _BeneficiaryId;
        partial void OnBeneficiaryIdChanging(global::System.Int32 value);
        partial void OnBeneficiaryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PortalUserId
        {
            get
            {
                return _PortalUserId;
            }
            set
            {
                OnPortalUserIdChanging(value);
                ReportPropertyChanging("PortalUserId");
                _PortalUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortalUserId");
                OnPortalUserIdChanged();
            }
        }
        private global::System.Int64 _PortalUserId;
        partial void OnPortalUserIdChanging(global::System.Int64 value);
        partial void OnPortalUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_StaffUser_Beneficiary", "Beneficiary")]
        public Beneficiary Beneficiary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_StaffUser_Beneficiary", "Beneficiary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_StaffUser_Beneficiary", "Beneficiary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Beneficiary> BeneficiaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_StaffUser_Beneficiary", "Beneficiary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Beneficiary>("ExpenseManagerDBModel.FK_StaffUser_Beneficiary", "Beneficiary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="TransactionItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionItem object.
        /// </summary>
        /// <param name="transactionItemId">Initial value of the TransactionItemId property.</param>
        /// <param name="expensenseItemId">Initial value of the ExpensenseItemId property.</param>
        /// <param name="requestedQuantity">Initial value of the RequestedQuantity property.</param>
        /// <param name="requestedUnitPrice">Initial value of the RequestedUnitPrice property.</param>
        /// <param name="expenseTransactionId">Initial value of the ExpenseTransactionId property.</param>
        /// <param name="expenseCategoryId">Initial value of the ExpenseCategoryId property.</param>
        /// <param name="expenseTypeId">Initial value of the ExpenseTypeId property.</param>
        /// <param name="approvedQuantity">Initial value of the ApprovedQuantity property.</param>
        /// <param name="approvedUnitPrice">Initial value of the ApprovedUnitPrice property.</param>
        /// <param name="approvedTotalPrice">Initial value of the ApprovedTotalPrice property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static TransactionItem CreateTransactionItem(global::System.Int32 transactionItemId, global::System.Int32 expensenseItemId, global::System.Int32 requestedQuantity, global::System.Double requestedUnitPrice, global::System.Int64 expenseTransactionId, global::System.Int32 expenseCategoryId, global::System.Int32 expenseTypeId, global::System.Int32 approvedQuantity, global::System.Double approvedUnitPrice, global::System.Double approvedTotalPrice, global::System.String description, global::System.Int32 status)
        {
            TransactionItem transactionItem = new TransactionItem();
            transactionItem.TransactionItemId = transactionItemId;
            transactionItem.ExpensenseItemId = expensenseItemId;
            transactionItem.RequestedQuantity = requestedQuantity;
            transactionItem.RequestedUnitPrice = requestedUnitPrice;
            transactionItem.ExpenseTransactionId = expenseTransactionId;
            transactionItem.ExpenseCategoryId = expenseCategoryId;
            transactionItem.ExpenseTypeId = expenseTypeId;
            transactionItem.ApprovedQuantity = approvedQuantity;
            transactionItem.ApprovedUnitPrice = approvedUnitPrice;
            transactionItem.ApprovedTotalPrice = approvedTotalPrice;
            transactionItem.Description = description;
            transactionItem.Status = status;
            return transactionItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionItemId
        {
            get
            {
                return _TransactionItemId;
            }
            set
            {
                if (_TransactionItemId != value)
                {
                    OnTransactionItemIdChanging(value);
                    ReportPropertyChanging("TransactionItemId");
                    _TransactionItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionItemId");
                    OnTransactionItemIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionItemId;
        partial void OnTransactionItemIdChanging(global::System.Int32 value);
        partial void OnTransactionItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpensenseItemId
        {
            get
            {
                return _ExpensenseItemId;
            }
            set
            {
                OnExpensenseItemIdChanging(value);
                ReportPropertyChanging("ExpensenseItemId");
                _ExpensenseItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpensenseItemId");
                OnExpensenseItemIdChanged();
            }
        }
        private global::System.Int32 _ExpensenseItemId;
        partial void OnExpensenseItemIdChanging(global::System.Int32 value);
        partial void OnExpensenseItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestedQuantity
        {
            get
            {
                return _RequestedQuantity;
            }
            set
            {
                OnRequestedQuantityChanging(value);
                ReportPropertyChanging("RequestedQuantity");
                _RequestedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedQuantity");
                OnRequestedQuantityChanged();
            }
        }
        private global::System.Int32 _RequestedQuantity;
        partial void OnRequestedQuantityChanging(global::System.Int32 value);
        partial void OnRequestedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RequestedUnitPrice
        {
            get
            {
                return _RequestedUnitPrice;
            }
            set
            {
                OnRequestedUnitPriceChanging(value);
                ReportPropertyChanging("RequestedUnitPrice");
                _RequestedUnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedUnitPrice");
                OnRequestedUnitPriceChanged();
            }
        }
        private global::System.Double _RequestedUnitPrice;
        partial void OnRequestedUnitPriceChanging(global::System.Double value);
        partial void OnRequestedUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExpenseTransactionId
        {
            get
            {
                return _ExpenseTransactionId;
            }
            set
            {
                OnExpenseTransactionIdChanging(value);
                ReportPropertyChanging("ExpenseTransactionId");
                _ExpenseTransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseTransactionId");
                OnExpenseTransactionIdChanged();
            }
        }
        private global::System.Int64 _ExpenseTransactionId;
        partial void OnExpenseTransactionIdChanging(global::System.Int64 value);
        partial void OnExpenseTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseCategoryId
        {
            get
            {
                return _ExpenseCategoryId;
            }
            set
            {
                OnExpenseCategoryIdChanging(value);
                ReportPropertyChanging("ExpenseCategoryId");
                _ExpenseCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseCategoryId");
                OnExpenseCategoryIdChanged();
            }
        }
        private global::System.Int32 _ExpenseCategoryId;
        partial void OnExpenseCategoryIdChanging(global::System.Int32 value);
        partial void OnExpenseCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseTypeId
        {
            get
            {
                return _ExpenseTypeId;
            }
            set
            {
                OnExpenseTypeIdChanging(value);
                ReportPropertyChanging("ExpenseTypeId");
                _ExpenseTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseTypeId");
                OnExpenseTypeIdChanged();
            }
        }
        private global::System.Int32 _ExpenseTypeId;
        partial void OnExpenseTypeIdChanging(global::System.Int32 value);
        partial void OnExpenseTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApprovedQuantity
        {
            get
            {
                return _ApprovedQuantity;
            }
            set
            {
                OnApprovedQuantityChanging(value);
                ReportPropertyChanging("ApprovedQuantity");
                _ApprovedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedQuantity");
                OnApprovedQuantityChanged();
            }
        }
        private global::System.Int32 _ApprovedQuantity;
        partial void OnApprovedQuantityChanging(global::System.Int32 value);
        partial void OnApprovedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ApprovedUnitPrice
        {
            get
            {
                return _ApprovedUnitPrice;
            }
            set
            {
                OnApprovedUnitPriceChanging(value);
                ReportPropertyChanging("ApprovedUnitPrice");
                _ApprovedUnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedUnitPrice");
                OnApprovedUnitPriceChanged();
            }
        }
        private global::System.Double _ApprovedUnitPrice;
        partial void OnApprovedUnitPriceChanging(global::System.Double value);
        partial void OnApprovedUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ApprovedTotalPrice
        {
            get
            {
                return _ApprovedTotalPrice;
            }
            set
            {
                OnApprovedTotalPriceChanging(value);
                ReportPropertyChanging("ApprovedTotalPrice");
                _ApprovedTotalPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedTotalPrice");
                OnApprovedTotalPriceChanged();
            }
        }
        private global::System.Double _ApprovedTotalPrice;
        partial void OnApprovedTotalPriceChanging(global::System.Double value);
        partial void OnApprovedTotalPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseCategory", "ExpenseCategory")]
        public ExpenseCategory ExpenseCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseCategory", "ExpenseCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseCategory", "ExpenseCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseCategory> ExpenseCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseCategory", "ExpenseCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseCategory>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseCategory", "ExpenseCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseItem", "ExpenseItem")]
        public ExpenseItem ExpenseItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseItem", "ExpenseItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseItem", "ExpenseItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseItem> ExpenseItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseItem", "ExpenseItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseItem>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseItem", "ExpenseItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseTransaction", "ExpenseTransaction")]
        public ExpenseTransaction ExpenseTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseTransaction", "ExpenseTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseTransaction", "ExpenseTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseTransaction> ExpenseTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseTransaction", "ExpenseTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseTransaction>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseTransaction", "ExpenseTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_TransactionItem_ExpenseType", "ExpenseType")]
        public ExpenseType ExpenseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseType", "ExpenseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseType", "ExpenseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseType> ExpenseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseType", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseType>("ExpenseManagerDBModel.FK_TransactionItem_ExpenseType", "ExpenseType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpenseManagerDBModel", Name="Unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Unit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Unit object.
        /// </summary>
        /// <param name="unitId">Initial value of the UnitId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Unit CreateUnit(global::System.Int32 unitId, global::System.String name, global::System.Int32 departmentId, global::System.Int32 status)
        {
            Unit unit = new Unit();
            unit.UnitId = unitId;
            unit.Name = name;
            unit.DepartmentId = departmentId;
            unit.Status = status;
            return unit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                if (_UnitId != value)
                {
                    OnUnitIdChanging(value);
                    ReportPropertyChanging("UnitId");
                    _UnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnitId");
                    OnUnitIdChanged();
                }
            }
        }
        private global::System.Int32 _UnitId;
        partial void OnUnitIdChanging(global::System.Int32 value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Beneficiary_Unit", "Beneficiary")]
        public EntityCollection<Beneficiary> Beneficiaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Beneficiary>("ExpenseManagerDBModel.FK_Beneficiary_Unit", "Beneficiary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Beneficiary>("ExpenseManagerDBModel.FK_Beneficiary_Unit", "Beneficiary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpenseManagerDBModel", "FK_Unit_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_Unit_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_Unit_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("ExpenseManagerDBModel.FK_Unit_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("ExpenseManagerDBModel.FK_Unit_Department", "Department", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
